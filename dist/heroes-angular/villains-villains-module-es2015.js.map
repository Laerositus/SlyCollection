{"version":3,"sources":["webpack:///./src/app/villains/villain-detail/villain-detail.component.html","webpack:///./src/app/villains/villain-list/villain-list.component.html","webpack:///./src/app/villains/villains/villains.component.html","webpack:///./src/app/villains/villain-detail/villain-detail.component.ts","webpack:///./src/app/villains/villain-list/villain-list.component.ts","webpack:///./src/app/villains/villain.service.ts","webpack:///./src/app/villains/villains.module.ts","webpack:///./src/app/villains/villains/villains.component.ts"],"names":[],"mappings":"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","file":"villains-villains-module-es2015.js","sourcesContent":["module.exports = \"<div class=\\\"card edit-detail\\\">\\r\\n  <header class=\\\"card-header\\\">\\r\\n    <p class=\\\"card-header-title\\\">\\r\\n      {{editingVillain.name}}\\r\\n      &nbsp;\\r\\n    </p>\\r\\n  </header>\\r\\n  <div class=\\\"card-content\\\">\\r\\n    <div class=\\\"content\\\">\\r\\n      <div class=\\\"field\\\" *ngIf=\\\"editingVillain.id\\\">\\r\\n        <label class=\\\"label\\\" for=\\\"id\\\">\\r\\n          id\\r\\n        </label>\\r\\n        <input name=\\\"id\\\" class=\\\"input\\\" type=\\\"text\\\" [(ngModel)]=\\\"editingVillain.id\\\" placeholder=\\\"e.g. VillainColleen\\\" readOnly />\\r\\n      </div>\\r\\n      <div class=\\\"field\\\">\\r\\n        <label class=\\\"label\\\" for=\\\"name\\\">\\r\\n          name\\r\\n        </label>\\r\\n        <input name=\\\"name\\\" class=\\\"input\\\" type=\\\"text\\\" [(ngModel)]=\\\"editingVillain.name\\\" placeholder=\\\"e.g. Colleen\\\" />\\r\\n      </div>\\r\\n      <div class=\\\"field\\\">\\r\\n        <label class=\\\"label\\\" for=\\\"description\\\">\\r\\n          description\\r\\n        </label>\\r\\n        <input name=\\\"description\\\" class=\\\"input\\\" type=\\\"text\\\" [(ngModel)]=\\\"editingVillain.description\\\" placeholder=\\\"dance fight!\\\" />\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n  <footer class=\\\"card-footer \\\">\\r\\n    <app-button-footer class=\\\"card-footer-item\\\" [className]=\\\"'cancel-button'\\\" [iconClasses]=\\\"'fas fa-undo'\\\" (clicked)=\\\"clear()\\\"\\r\\n      label=\\\"Cancel\\\" [item]=\\\"editingVillain\\\"></app-button-footer>\\r\\n    <app-button-footer class=\\\"card-footer-item\\\" [className]=\\\"'save-button'\\\" [iconClasses]=\\\"'fas fa-save'\\\" (clicked)=\\\"saveVillain()\\\"\\r\\n      label=\\\"Save\\\" [item]=\\\"editingVillain\\\"></app-button-footer>\\r\\n  </footer>\\r\\n</div>\\r\\n\"","module.exports = \"<ul class=\\\"list\\\">\\r\\n  <li role=\\\"presentation\\\" *ngFor=\\\"let villain of villains; trackBy:byId; let i=index\\\">\\r\\n    <div class=\\\"card\\\">\\r\\n      <app-card-content\\r\\n      [name]=\\\"villain.name\\\" [description]=\\\"villain.description\\\"></app-card-content>\\r\\n      <footer class=\\\"card-footer\\\">\\r\\n        <app-button-footer class=\\\"card-footer-item\\\"\\r\\n          [className]=\\\"'delete-item'\\\"\\r\\n          [iconClasses]=\\\"'fas fa-trash'\\\"\\r\\n          (clicked)=\\\"deleteVillain($event)\\\"\\r\\n          label=\\\"Delete\\\"\\r\\n          [item]=\\\"villain\\\"></app-button-footer>\\r\\n        <app-button-footer class=\\\"card-footer-item\\\"\\r\\n          [className]=\\\"'edit-item'\\\"\\r\\n          [iconClasses]=\\\"'fas fa-edit'\\\"\\r\\n          (clicked)=\\\"selectVillain($event)\\\"\\r\\n          label=\\\"Edit\\\"\\r\\n          [item]=\\\"villain\\\"></app-button-footer>\\r\\n      </footer>\\r\\n    </div>\\r\\n  </li>\\r\\n</ul>\\r\\n\"","module.exports = \"<div class=\\\"content-container\\\">\\r\\n  <app-list-header title=\\\"Villains\\\" (add)=\\\"enableAddMode()\\\" (refresh)=\\\"getVillains()\\\"></app-list-header>\\r\\n  <div class=\\\"columns is-multiline is-variable\\\">\\r\\n    <div class=\\\"column is-8\\\" *ngIf=\\\"villains$ | async as villains\\\">\\r\\n      <app-villain-list *ngIf=\\\"!selected\\\" [villains]=\\\"villains\\\" [selectedVillain]=\\\"selected\\\" (selected)=\\\"select($event)\\\"\\r\\n        (deleted)=\\\"askToDelete($event)\\\"></app-villain-list>\\r\\n      <app-villain-detail *ngIf=\\\"selected\\\" [villain]=\\\"selected\\\" (unselect)=\\\"clear()\\\" (save)=\\\"save($event)\\\"></app-villain-detail>\\r\\n    </div>\\r\\n  </div>\\r\\n\\r\\n  <app-modal class=\\\"modal-villain\\\" [message]=\\\"message\\\" [isOpen]=\\\"showModal\\\" (handleNo)=\\\"closeModal()\\\" (handleYes)=\\\"deleteVillain()\\\"></app-modal>\\r\\n</div>\\r\\n\"","import {\r\n  Component,\r\n  Input,\r\n  EventEmitter,\r\n  OnChanges,\r\n  Output,\r\n  SimpleChanges,\r\n  ChangeDetectionStrategy\r\n} from '@angular/core';\r\n\r\nimport { Villain } from '../../core';\r\n\r\n@Component({\r\n  selector: 'app-villain-detail',\r\n  templateUrl: './villain-detail.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class VillainDetailComponent implements OnChanges {\r\n  @Input() villain: Villain;\r\n  @Output() unselect = new EventEmitter<string>();\r\n  @Output() save = new EventEmitter<Villain>();\r\n\r\n  addMode = false;\r\n  editingVillain: Villain;\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    if (this.villain && this.villain.id) {\r\n      this.editingVillain = { ...this.villain };\r\n      this.addMode = false;\r\n    } else {\r\n      this.editingVillain = { id: undefined, name: '', description: '' };\r\n      this.addMode = true;\r\n    }\r\n  }\r\n\r\n  clear() {\r\n    this.unselect.emit();\r\n  }\r\n\r\n  saveVillain() {\r\n    this.save.emit(this.editingVillain);\r\n    this.clear();\r\n  }\r\n}\r\n","import { Component, EventEmitter, Input, Output, ChangeDetectionStrategy } from '@angular/core';\r\nimport { Villain } from '../../core';\r\n\r\n@Component({\r\n  selector: 'app-villain-list',\r\n  templateUrl: './villain-list.component.html',\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class VillainListComponent {\r\n  @Input() villains: Villain[];\r\n  @Input() selectedVillain: Villain;\r\n  @Output() deleted = new EventEmitter<Villain>();\r\n  @Output() selected = new EventEmitter<Villain>();\r\n\r\n  byId(villain: Villain) {\r\n    return villain.id;\r\n  }\r\n\r\n  selectVillain(villain: Villain) {\r\n    this.selected.emit(villain);\r\n  }\r\n\r\n  deleteVillain(villain: Villain) {\r\n    this.deleted.emit(villain);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  EntityCollectionServiceBase,\r\n  EntityCollectionServiceElementsFactory\r\n} from '@ngrx/data';\r\nimport { Villain } from '../core';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class VillainService extends EntityCollectionServiceBase<Villain> {\r\n  constructor(serviceElementsFactory: EntityCollectionServiceElementsFactory) {\r\n    super('Villain', serviceElementsFactory);\r\n  }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule } from '@angular/core';\r\nimport { RouterModule, Routes } from '@angular/router';\r\nimport { SharedModule } from '../shared/shared.module';\r\nimport { VillainDetailComponent } from './villain-detail/villain-detail.component';\r\nimport { VillainListComponent } from './villain-list/villain-list.component';\r\nimport { VillainsComponent } from './villains/villains.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: VillainsComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [CommonModule, RouterModule.forChild(routes), SharedModule],\r\n  exports: [RouterModule, VillainsComponent],\r\n  declarations: [\r\n    VillainsComponent,\r\n    VillainListComponent,\r\n    VillainDetailComponent\r\n  ]\r\n})\r\nexport class VillainsModule {}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { Villain } from '../../core';\r\nimport { VillainService } from '../villain.service';\r\n\r\n@Component({\r\n  selector: 'app-villains',\r\n  templateUrl: './villains.component.html'\r\n})\r\nexport class VillainsComponent implements OnInit {\r\n  selected: Villain;\r\n  villains$: Observable<Villain[]>;\r\n  message = '?';\r\n  villainToDelete: Villain;\r\n  showModal = false;\r\n\r\n  constructor(\r\n    private villainService: VillainService // , private modalService: ModalService\r\n  ) {\r\n    this.villains$ = villainService.entities$;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getVillains();\r\n  }\r\n\r\n  add(villain: Villain) {\r\n    this.villainService.add(villain);\r\n  }\r\n\r\n  askToDelete(villain: Villain) {\r\n    this.villainToDelete = villain;\r\n    this.showModal = true;\r\n    if (this.villainToDelete.name) {\r\n      this.message = `Would you like to delete ${this.villainToDelete.name}?`;\r\n    }\r\n  }\r\n\r\n  clear() {\r\n    this.selected = null;\r\n  }\r\n\r\n  closeModal() {\r\n    this.showModal = false;\r\n  }\r\n\r\n  deleteVillain() {\r\n    this.closeModal();\r\n    if (this.villainToDelete) {\r\n      this.villainService\r\n        .delete(this.villainToDelete.id)\r\n        .subscribe(() => (this.villainToDelete = null));\r\n    }\r\n    this.clear();\r\n  }\r\n\r\n  enableAddMode() {\r\n    this.selected = <any>{};\r\n  }\r\n\r\n  getVillains() {\r\n    this.villainService.getAll();\r\n    this.clear();\r\n  }\r\n\r\n  save(villain: Villain) {\r\n    if (this.selected && this.selected.name) {\r\n      this.update(villain);\r\n    } else {\r\n      this.add(villain);\r\n    }\r\n  }\r\n\r\n  select(villain: Villain) {\r\n    this.selected = villain;\r\n  }\r\n\r\n  update(villain: Villain) {\r\n    this.villainService.update(villain);\r\n  }\r\n}\r\n"],"sourceRoot":""}